<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
  <head>
    <title>{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</title>
    {%include "components/pageheader.njk"%}
    {% for imp in dynamics.common.head %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.index.head %}
      {% include imp %}
    {% endfor %}
  </head>
  <body class="theme-{{meta.baseTheme}} markdown-preview-view markdown-rendered markdown-preview-section {{meta.bodyClasses}}">
    {%include "components/notegrowthhistory.njk"%}
    {% if settings.dgShowFileTree !== true %}
      {%include "components/navbar.njk"%}
    {%else%}
      {%include "components/filetree.njk"%}
    {% endif %}
    {% if settings.dgEnableSearch === true %}
      {%include "components/searchContainer.njk"%}
    {% endif %}
    <main class="content cm-s-obsidian {{contentClasses}}">
      <header>
      {% if settings.dgShowInlineTitle === true %}
        <h1>{{ noteTitle  }}</h1>
      {% endif %}

      <div class="header-meta">
        {% if settings.dgShowTags === true and tags %}
          <div class="header-tags">
            {% for tag in tags %}
              {% if tag != 'gardenEntry' and tag !='note' %}
                <a class="tag" onclick="toggleTagSearch(this)">
                  #{{tag}}
                </a>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}
      </div>
      {% for imp in dynamics.common.header %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.index.header %}
        {% include imp %}
      {% endfor %}
      </header>
      {% for imp in dynamics.common.beforeContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.index.beforeContent %}
        {% include imp %}
      {% endfor %}
      {{ content | hideDataview | taggify | link | safe}}
      {% for imp in dynamics.common.afterContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.index.afterContent %}
        {% include imp %}
      {% endfor %}
    </main>

    {% if settings.dgShowBacklinks === true or settings.dgShowLocalGraph === true or settings.dgShowToc === true%}
      {%include "components/sidebar.njk" %}
    {%endif%}

    {% if settings.dgLinkPreview === true %}
      {%include "components/linkPreview.njk"%}
    {% endif %}
    {% for imp in dynamics.common.footer %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.index.footer %}
      {% include imp %}
    {% endfor %}
    {%include "components/lucideIcons.njk"%}

<script>
      // 科技感全局点击特效，按住时间越长，范围越大
      let mouseDownTime = 0;
      document.addEventListener('mousedown', function(e) {
        if (e.button !== 0) return;
        mouseDownTime = Date.now();
      });
      document.addEventListener('mouseup', function(e) {
        if (e.button !== 0) return;
        const duration = Math.min(Math.max(Date.now() - mouseDownTime, 80), 1200); // 80~1200ms
        // 计算scale范围：最小1.5，最大3.5
        const scale = 1.5 + (duration - 80) / (1200 - 80) * (3.5 - 1.5);
        // 主圆环
        const ripple = document.createElement('div');
        ripple.className = 'cursor-ripple';
        ripple.style.left = e.clientX + 'px';
        ripple.style.top = e.clientY + 'px';
        ripple.style.setProperty('--ripple-scale', scale);
        document.body.appendChild(ripple);
        setTimeout(() => ripple.remove(), 700);
        // 粒子
        for (let i = 0; i < 6; i++) {
          const particle = document.createElement('div');
          particle.className = 'cursor-particle';
          particle.style.left = e.clientX + 'px';
          particle.style.top = e.clientY + 'px';
          // 随机扩散方向
          const angle = Math.random() * 2 * Math.PI;
          const dist = (30 + Math.random() * 20) * scale/2; // 跟随主圆环scale
          particle.style.setProperty('--tx', `${Math.cos(angle) * dist}px`);
          particle.style.setProperty('--ty', `${Math.sin(angle) * dist}px`);
          particle.style.setProperty('--particle-scale', 0.5 + scale/4);
          document.body.appendChild(particle);
          setTimeout(() => particle.remove(), 700);
        }
      });
    </script>

    </body>
  </html>
