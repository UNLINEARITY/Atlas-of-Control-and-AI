---
permalink: "notes/{{ page.fileSlug | slugify }}/"
---
<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
  <head>
    <title>{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</title>
    {%include "components/pageheader.njk"%}
    {% for imp in dynamics.common.head %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.notes.head %}
      {% include imp %}
    {% endfor %}
    <link rel="stylesheet" href="/styles/copy-code.css">
    <link rel="stylesheet" href="/styles/lazy-loading.css">
    <link rel="stylesheet" href="/styles/mobile-optimization.css">
  </head>
  <body class="theme-{{meta.baseTheme}} markdown-preview-view markdown-rendered markdown-preview-section {{meta.bodyClasses}}">
    {%include "components/notegrowthhistory.njk"%}
    
    {% if settings.dgShowFileTree !== true %}
      {%include "components/navbar.njk"%}
    {%else%}
      {%include "components/filetree.njk"%}
    {% endif %}

    {% if settings.dgEnableSearch === true %}
      {%include "components/searchContainer.njk"%}
    {% endif %}

    <main class="content cm-s-obsidian {{contentClasses}}">
      <header>
        {% if settings.dgShowInlineTitle === true %}
          <h1 data-note-icon="{% if noteIcon %}{{noteIcon}}{% else %}{{meta.noteIconsSettings.default}}{% endif %}">{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</h1>
        {% endif %}
        <div class="header-meta">
          {% if settings.dgShowTags === true and tags %}
            <div class="header-tags">
              {% for tag in tags %}
                {% if tag != 'gardenEntry' and tag !='note' %}
                  <a class="tag" onclick="toggleTagSearch(this)">
                    #{{tag}}
                  </a>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}
          {%- if meta.timestampSettings.showCreated or meta.timestampSettings.showUpdated -%}
          <div class="timestamps">
            {%- if meta.timestampSettings.showCreated and created -%}
            <div><i icon-name="calendar-plus"></i> <span class="human-date" data-date="{{created}}"></span></div>
            {%- endif -%}
            {%- if meta.timestampSettings.showUpdated and updated -%}
            <div><i icon-name="calendar-clock"></i> <span class="human-date" data-date="{{updated}}"></span></div>
            {%- endif -%}
          </div>
          {%- endif -%}
        </div>
      {% for imp in dynamics.common.header %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.header %}
        {% include imp %}
      {% endfor %}
      </header>
      {% for imp in dynamics.common.beforeContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.beforeContent %}
        {% include imp %}
      {% endfor %}
      {{ content | hideDataview | taggify | link | safe}}
      {% for imp in dynamics.common.afterContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.afterContent %}
        {% include imp %}
      {% endfor %}
    </main>

    {% if settings.dgShowBacklinks === true or settings.dgShowLocalGraph === true or settings.dgShowToc === true%}
      {%include "components/sidebar.njk"%}
    {% endif %}

    {% if settings.dgLinkPreview === true %}
      {%include "components/linkPreview.njk"%}
    {% endif %}
    {% include "components/references.njk" %}
    {% include "components/timestamps.njk" %}
    {% for imp in dynamics.common.footer %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.notes.footer %}
      {% include imp %}
    {% endfor %}
    {%include "components/lucideIcons.njk"%}

    

    <style>
      .image-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        overflow: hidden;
      }

      .image-overlay img {
        cursor: grab;
        max-width: 90%;
        max-height: 90%;
        transition: transform 0.1s linear;
        transform-origin: center center;
      }
    </style>

    <script>
      // Image click to enlarge
      document.addEventListener('DOMContentLoaded', (event) => {
        const images = document.querySelectorAll('.content img');
        images.forEach(image => {
          image.addEventListener('click', () => {
            const overlay = document.createElement('div');
            overlay.classList.add('image-overlay');
            
            const enlargedImage = document.createElement('img');
            enlargedImage.src = image.src;
            
            overlay.appendChild(enlargedImage);
            document.body.appendChild(overlay);

            let scale = 1;
            let panning = false;
            let pointX = 0;
            let pointY = 0;
            let start = { x: 0, y: 0 };

            function setTransform() {
              enlargedImage.style.transform = `translate(${pointX}px, ${pointY}px) scale(${scale})`;
            }

            enlargedImage.addEventListener('mousedown', (e) => {
              e.preventDefault();
              panning = true;
              start = { x: e.clientX - pointX, y: e.clientY - pointY };
              enlargedImage.style.cursor = 'grabbing';
            });

            overlay.addEventListener('mouseup', () => {
              panning = false;
              enlargedImage.style.cursor = 'grab';
            });

            overlay.addEventListener('mouseleave', () => {
                panning = false;
                enlargedImage.style.cursor = 'grab';
            });

            overlay.addEventListener('mousemove', (e) => {
              if (!panning) return;
              pointX = (e.clientX - start.x);
              pointY = (e.clientY - start.y);
              setTransform();
            });

            overlay.addEventListener('wheel', (e) => {
              e.preventDefault();
              const delta = (e.wheelDelta ? e.wheelDelta : -e.deltaY);
              (delta > 0) ? (scale *= 1.2) : (scale /= 1.2);
              setTransform();
            });

            overlay.addEventListener('click', (e) => {
                if (e.target === overlay) {
                    document.body.removeChild(overlay);
                }
            });
          });
        });

        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') {
            const overlay = document.querySelector('.image-overlay');
            if (overlay) {
              document.body.removeChild(overlay);
            }
          }
        });
      });
    </script>
    <script src="/scripts/lazy-loading.js"></script>
    <script src="/scripts/copy-code.js"></script>
    <script src="/scripts/mobile-enhancements.js"></script>


  {%include "components/main-footer.njk"%}
  <script id="MathJax-script" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js"></script>
  </body>
</html>
