
<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
    <head>
        <title>迷失于知识之海 / Lost in the Sea of Knowledge</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="/styles/digital-garden-base.css" rel="stylesheet">
        {%- if meta.themeStyle and meta.themeStyle.trim() !== '' %}
            <link href="/styles/obsidian-base.css" rel="stylesheet">
    	    <link href="{{meta.themeStyle}}" rel="stylesheet">
        {% else %}
            <link href="/styles/style.css" rel="stylesheet">
        {%- endif %}

        <link href="/styles/custom-style.css" rel="stylesheet">
        <style>
            body {
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                background-color: var(--background-primary);
                color: var(--text-normal);
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
                text-align: center;
                padding: 20px;
                box-sizing: border-box;
                overflow: hidden; /* Prevent scrollbars from graph */
            }
            .container {
                max-width: 90%;
                width: 800px;
                margin: 0 auto;
                z-index: 1; /* Ensure text is above the graph */
                position: relative;
                background-color: rgba(0, 0, 0, 0.2); /* Lighter scrim */
                padding: 2em 3em;
                border-radius: 15px;
                backdrop-filter: blur(5px); /* Softer blur */
                border: 1px solid rgba(255, 255, 255, 0.1);
            }
            h1 {
                font-size: clamp(2rem, 8vw, 3.5rem);
                margin-bottom: 0.5em;
                color: var(--text-title);
                text-shadow: 1px 1px 4px rgba(0,0,0,0.2);
            }
            p {
                font-size: clamp(1rem, 4vw, 1.2rem);
                line-height: 1.6;
                margin-bottom: 1em;
            }
            .actions {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                gap: 10px;
            }
            .actions a {
                display: inline-block;
                margin: 5px;
                padding: 12px 22px;
                border: 1px solid var(--interactive-accent);
                border-radius: 8px;
                text-decoration: none;
                color: var(--interactive-accent);
                background-color: transparent;
                transition: all 0.3s ease;
                font-size: clamp(0.9rem, 3.5vw, 1rem);
            }
            .actions a:hover {
                background-color: var(--interactive-accent);
                color: var(--text-on-accent);
            }
            .graph-background {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                opacity: 0.3; /* Adjusted for a more subtle effect */
                z-index: 0;
                pointer-events: none; /* Disable all mouse interactions */
            }
            
            @media (max-width: 768px) {
                .container {
                    padding: 1.5em 2em;
                }
                h1 {
                    font-size: clamp(2.5rem, 10vw, 3rem);
                }
                p {
                    font-size: clamp(1rem, 4.5vw, 1.1rem);
                }
                .actions a {
                    padding: 10px 18px;
                }
            }
        </style>
    </head>
    <body class="theme-{{meta.baseTheme}} markdown-preview-view">
        <div class="graph-background" id="graph-background"></div>
        <div class="container">
            <h1>404-Lost in the Sea of Knowledge</h1>
            <p>您似乎进入了一片未知的领域，这里没有您要寻找的知识节点。</p>
            <p>或许，您可以在这片浩瀚的知识图谱中重新定位方向。</p>
            <div class="actions">
                <a href="/">返回主页</a>
                <a href="javascript:history.back()">返回上一页</a>
                <a href="/3D-graph/">探索知识图谱</a>
            </div>
            <p style="font-size: 0.9em; margin-top: 2em;">如果您认为这是一个错误，请通过邮件告知我们。</p>
        </div>

        <script type="module">
            import * as THREE from 'https://unpkg.com/three@0.164.1/build/three.module.js';
            import ForceGraph3D from 'https://unpkg.com/3d-force-graph@1.73.3/dist/3d-force-graph.mjs';

            // 3d-force-graph expects THREE to be in the global scope
            window.THREE = THREE;

            const graphContainer = document.getElementById('graph-background');
            const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';
            const graphUrl = isLocal ? '/graph.json' : window.location.origin + '/graph.json';

            fetch(graphUrl)
                .then(res => res.json())
                .then(data => {
                    const allNodes = [];
                    for (const nodeId in data.nodes) {
                        const node = data.nodes[nodeId];
                        if (node.hide) continue;
                        allNodes.push({
                            id: node.url,
                            name: node.title,
                            val: node.size,
                            outBound: node.outBound || []
                        });
                    }

                    // --- New sampling logic ---
                    const MAX_NODES = 75; // Max nodes for the background
                    const sampledNodes = [];
                    const sampledNodeIds = new Set();

                    while (sampledNodes.length < MAX_NODES && allNodes.length > 0) {
                        const randomIndex = Math.floor(Math.random() * allNodes.length);
                        const node = allNodes.splice(randomIndex, 1)[0];
                        sampledNodes.push(node);
                        sampledNodeIds.add(node.id);
                    }

                    const links = [];
                    sampledNodes.forEach(node => {
                        if (node.outBound) {
                            node.outBound.forEach(targetUrl => {
                                if (sampledNodeIds.has(targetUrl)) {
                                    links.push({ source: node.id, target: targetUrl });
                                }
                            });
                        }
                    });

                    const graphData = { nodes: sampledNodes, links };
                    // --- End of sampling logic ---

                    const Graph = ForceGraph3D()(graphContainer)
                        .graphData(graphData)
                        .backgroundColor('rgba(0,0,0,0)')
                        // --- Simplified styling for background ---
                        .nodeColor(() => 'rgba(128, 128, 128, 0.8)')
                        .nodeVal(1)
                        .linkColor(() => 'rgba(128, 128, 128, 0.5)')
                        .linkWidth(0.4)
                        // --- End of simplified styling ---
                        .enableNavigationControls(false);
                    
                    window.addEventListener('resize', () => {
                        Graph.width(graphContainer.clientWidth);
                        Graph.height(graphContainer.clientHeight);
                    });
                    Graph.width(graphContainer.clientWidth);
                    Graph.height(graphContainer.clientHeight);

                    Graph.d3Force('link').distance(30);
                    Graph.d3Force('charge').strength(-120);

                    let angle = 0;
                    setInterval(() => {
                        Graph.cameraPosition({
                            x: 400 * Math.sin(angle),
                            z: 400 * Math.cos(angle)
                        });
                        angle -= Math.PI / 900;
                    }, 10);
                })
                .catch(error => {
                    console.error("Error loading graph data for 404 page:", error);
                });
        </script>
    </body>
</html>
